version: "3.8"

services:
    restapi:
        build: ./REST-Api
        depends_on:
            - database
        ports:
            - 5000:5000
        volumes:
            - ./REST-Api:/REST-Api
        environment:
            FLASK_ENV: production
            DB_USER: root
            DB_PASS: root
            DB_HOST: database
            DB_PORT: 3306
            DB_NAME: projectsmanager
            REALTIME_UPDATES_SERVICE_URL: "http://realtime_updates_feeder:3001/updatesFeeder"
            TUNNELED_API_ADDRESS: https://fdgnvbngjhtkorestapitunnel.loca.lt
            FLASK_APP: app
        command: waitress-serve --listen=0.0.0.0:5000 app:app

    expose_port_over_internet:
        ports:
            - 80:80
        build: ./exposeDomainOverInternet
        depends_on:
            - restapi
        environment:
            LOCAL_HOST: restapi
        command: npm start

    realtime_updates_feeder:
        build:
            context: ./RealTimeUpdatesFeeder
        ports:
            - 3001:3001
        environment:
            PORT: 3001
            HOST: 0.0.0.0
        command: npm start

    database:
        build: ./Database
        ports:
            - 3306:3306
        volumes:
            - projectsmanager-mariadb-data:/var/lib/mariadb

    client:
        build:
            context: ./client
            dockerfile: Dockerfile.production
        # depends_on:
        #     - restapi
        ports:
            - 3000:3000
        # command:serve -s staticContent -l 3000
        command: nginx -g "daemon off;"

# For populating de database with existing data run:
# docker exec -i 933b4a829367  mysql -uroot -proot projectsmanager < Database/projectsManagerExportedDB.sql
volumes:
    projectsmanager-mariadb-data:
